<?xml version="1.0" encoding="UTF-8"?>
<atwd1 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.cems.uwe.ac.uk/~f2-penikas/2019-20/modules/atwd1/assignment/atwd1_schema.xsd"
    code="UFCFX3-15-3" name="Advanced Topics in Web Development 1" year="2019/20">
    <student sno="99999999" un="f2-penikas" surname="Penikas" prog="BSc (Hons) Digital Media"/>
    <assignment>
        <component id="A" name="Currency Service">
            <tests>
                <!-- 
                 Note that you should only need to edit the '~f2-penikas' value 
                 to your own username to make these tests work for your application.
                -->
                
                <!-- convert 100.00 GBP to INR and return XML -->
                <test id="1" response="xml" type="success"
                    purpose="convert 100.00 GBP to INR and return XML">
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/?from=GBP&amp;to=INR&amp;amnt=100.00&amp;format=xml </test>
                
                <!-- convert 85.75 from USD to EUR and return JSON -->
                <test id="2" response="json" type="success"
                    purpose="convert 85.75 from USD to EUR and return JSON">
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/?from=USD&amp;to=EUR&amp;amnt=85.75&amp;format=json </test>
                
                <!-- redo test 1 but leave out 'format' parameter - should return XML by default -->
                <test id="3" response="xml" type="success"
                    purpose="redo test 1 but leave out format parameter - XML is default">
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/?from=GBP&amp;to=INR&amp;amnt=100.00 </test>
                
                <!-- error 1000: Required parameter is missing - the 'from' parameter is missing -->
                <test id="4" response="xml" type="error 1000"
                    purpose="Required parameter is missing - (from)">
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/?to=EUR&amp;amnt=100.00&amp;format=xml</test>
                
                <!-- error 1100: Parameter not recognized - the 'to' parameter is missing the 'o' (return json) -->
                <test id="5" response="json" type="error 1000 or 1100"
                    purpose="Parameter not recognized - the to parameter is misspelled (return json)"
                    >
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/?from=USD&amp;t=EUR&amp;amnt=100.00&amp;format=json</test>
                
                <!-- error 1200: Currency type not recognised - the 'from' value is 'YYY') -->
                <test id="6" response="json" type="error 1200"
                    purpose="Currency type not recognised - the from value is YYY">
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/?from=YYY&amp;to=EUR&amp;amnt=18.85&amp;format=xml</test>
                
                <!-- error 1300: Currency amount must be a decimal number - the 'amnt' value is non-decimal) -->
                <test id="7" response="xml" type="error 1300"
                    purpose="Currency amount must be a decimal number - the amnt value is non-decimal"
                    >
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/?from=USD&amp;to=EUR&amp;amnt=NaN&amp;format=xml</test>
                
                <!-- error 1400: Format must be xml or json - the 'format' value is 'ZZZ') -->
                <test id="8" response="xml" type="error 1400"
                    purpose="Format must be xml or json - the format value is ZZZ">
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/?from=USD&amp;to=EUR&amp;amnt=19.20&amp;format=ZZZ</test>
            </tests>
            <data>
                <rates_file>http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/data/rates.xml</rates_file>
            </data>
            <code>
                <file type="main"
                    >http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/docs/index.phps</file>
                <!-- You can add uo to 5 addtional url's here -->
                <file type="config"
                    >http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/docs/config.phps</file>
                <file type="functions"
                    >http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/docs/functions.phps</file>
            </code>
            <comment>This was easy-peasy. Did it in my sleep.</comment>
        </component>
        
        <component id="B" name="Post, Put &amp; Delete implementation">
            <tests>
                <!-- error 2000: Action not post, put or delete - value is 'other') -->
                <test id="9" response="xml" type="error 2000"
                    purpose="Action not post, put or delete - value is other)">
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/update/?cur=USD&amp;action=other</test>
                
                <!-- error 2100: Currency code is missing (no value) -->
                <test id="10" response="xml" type="error 2100"
                    purpose="Currency code is missing (no value)">
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/update/?cur=&amp;action=post</test>
                
                <!-- error 2200: Currency code not found for update (value is ZZZ) -->
                <test id="11" response="xml" type="error 2200"
                    purpose="Currency code not found for update (value is ZZZ)">
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/update/?cur=ZZZ&amp;action=put</test>
                
                <!-- error 2300: No rate listed for this currency -->
                <test id="12" response="xml" type="error 2300"
                    purpose="No rate listed for this currency - XPT (platinum) has no rate in fixer"
                    >
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/update/?cur=XPT&amp;action=put</test>
                
                <!-- error 2400: Cannot update base currency (value is GBP) -->
                <test id="14" response="xml" type="error 2400"
                    purpose="Cannot update base currency (value is GBP)">
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/update/?cur=GBP&amp;action=del</test>
                
                <!-- Update USD -->
                <test id="15" response="xml" type="success" purpose="Update USD">
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/update/?cur=USD&amp;action=post</test>
                
                <!-- DELETE USD -->
                <test id="16" response="xml" type="success" purpose="DELETE USD">
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/update/?cur=USD&amp;action=del</test>
                
                <!-- test delete raise - error 1200: Currency type not recognised -->
                <test id="17" response="xml" type="error 1200"
                    purpose="test delete - error 1200: Currency type not recognised">
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/?from=USD&amp;to=EUR&amp;amnt=18.85&amp;format=json</test>
                
                <!-- PUT USD -->
                <test id="18" response="xml" type="success" purpose="PUT USD">
                    http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/update/?cur=USD&amp;action=put</test>
            </tests>
            <code>
                <file type="POST, PUT, DELETE"
                    >http://isa.cems.uwe.ac.uk/~f2-penikas/atwd1/assignment/docs/update/index.phps</file>
                <!-- You can add more file elements here -->
            </code>
            <comment>At first it was hard to understand what method should be used for these
                functions, but with a bit of research I think I chose the right ones, and made the
                functions work </comment>
        </component>
        
        <component id="C" name="Form Interface">
            <form> The form was prety straight forward to make. It was a bit hard to understand
                which method, POST or GET to use. I made a conclusion that in order for the program
                to work as required I need to make it work both of the methods. Therefore the whole
                update function got confusing for me, and I made it more complicated than it should
                have been.</comment>
        </component>
        
        <component id="D" name="Critical Evaluation">
            <eval>
                <![CDATA[
                     <p>Can be up to 500 words and can include HTML5 or Markdown markup</p> 
                ]]>
                • What were your learning outcomes in respect to this project?
                
                This project had a lot oflearning outcomes personally. It was my first proper 
                interaction with the RESTful. This project had a different approach than most of my 
                previous work, because
                it required to write a very universal code, so it could be used not with just one
                API. What was also new is the xml and json formats. Working on this project I
                learned how to access the api’s and how to convert their data into readable formats.
                I learned how to write from the two formats and also how to read it “xpath”, select
                specific values, nodes and use that in your code. Although I might have made some
                parts more complicated than they should have been, I think I managed to deal with
                these tasks well. The project required human input too, and so I needed to create a
                form and also to learn how to handle wrong or undesirable inputs. The html part of
                the form was familiar, but the php part not so much. I had to use learn to use both
                POST and GET methods and javascript to make sure they don’t collide with each other.
                Handling errors was also about making sure that the things that can’t collide don’t
                collide. It was new for me but I think I learned a lot, and did a pretty good job at
                it. 
                • How this application may be extended and improved?
                
                In this project I think I
                did complicate a lot of functions like, updating the currencies, because I didn’t
                know how to do them when I started writing code. If I would have had more time, I
                could have made some of them more understandable, require less code, and be more
                flexible.
                • How this application may (possibly) be re-used?
                
                I think this application
                could be used to get data about a lot of things, because internet is full of
                accessible information. With some tweaking, you could quickly get specific
                information about weather, transport routes, times, or even stocks.
            </eval>
        </component>
    </assignment>
    
</atwd1>
<!-- ATWD1 assignment XML submission File, 2019 -->
<!-- author: prakash.chatterjee@uwe.ac.uk -->

